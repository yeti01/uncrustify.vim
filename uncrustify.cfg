#
# General options
#

newlines                        = lf

#
# Indenting
#

indent_columns                  = 4
indent_continue                 = 4
indent_with_tabs                = 0
indent_class                    = true
indent_class_colon              = true
indent_switch_case              = 4
indent_col1_comment             = true

#
# Spacing options
#

sp_arith                        = force    # " + " vs "+"
sp_assign                       = force    # " += " vs "+="
sp_pp_stringify                 = force    # "#include <" vs "#include<"
sp_bool                         = force    # " && " vs "&&"
sp_compare                      = force    # " == " vs "=="
sp_inside_paren                 = remove   # "( 1 )" vs "(1)"
sp_paren_paren                  = remove   # "(( 1 ))" vs "((1))"
sp_before_ptr_star              = force    # " *i" vs "*i"
sp_between_ptr_star             = remove   # "* *i" vs "**i"
sp_after_ptr_star               = remove   # "* i" vs "*i"
sp_before_byref                 = force    # " &i" vs "&i"
sp_after_byref                  = remove   # "& i" vs "&i"
sp_before_angle                 = remove   # "template <" vs "template<"
sp_inside_angle                 = remove   # "< 1 >" vs "<1>"
sp_after_angle                  = force    # "template<>" vs "template<> "
sp_before_sparen                = force    # "if (" vs "if("
sp_inside_sparen                = remove   # "if ( 1 )" vs "if (1)"
sp_after_sparen                 = force    # "if ()" vs "if() "
sp_sparen_brace                 = force    # "if () {" vs "if (){"
sp_before_semi_for_empty        = remove   # " ;" vs ";"
sp_after_semi_for_empty         = remove   # "; " vs ";"
sp_inside_square                = remove   # "[ 1 ]" vs "[1]"
sp_after_comma                  = force    # "a, b" vs "a,b"
sp_after_cast                   = remove   # "(int) a" vs "(int)a"
sp_sizeof_paren                 = remove   # "sizeof (int)" vs "sizeof(int)"
sp_inside_braces_enum           = add      # "{ 1 }" vs "{1}"
sp_inside_braces_struct         = add      # "{ 1 }" vs "{1}"
sp_inside_braces                = add      # "{ 1 }" vs "{1}"
sp_type_func                    = force    # "int foo()" vs "int  foo()"
sp_func_proto_paren             = remove   # "int foo ();" vs "int foo();"
sp_func_def_paren               = remove   # "int foo (){" vs "int foo(){"
sp_inside_fparen                = remove   # "func( param )" vs "func(param)"
sp_fparen_brace                 = force    # "int foo() {" vs "int foo(){"
sp_func_call_paren              = remove   # "foo (" vs "foo("
sp_func_class_paren             = remove   # "foo::bar (" vs "foo::bar("
sp_return_paren                 = force    # "return (1);" vs "return(1);"
sp_else_brace                   = force    # "else {" vs "else{"
sp_brace_else                   = force    # "} else" vs "}else"
sp_brace_typedef                = force    # "typedef struct {} foo" vs "typedef struct {}foo"
sp_try_brace                    = force    # "try {" vs "try{"
sp_before_dc                    = remove   # " ::" vs "::"
sp_after_dc                     = remove   # ":: " vs "::"
sp_cmt_cpp_start                = force    # "// A" vs "//A"

#
# Code alignment (not left column spaces/tabs)
#

align_struct_init_span          = 3
align_typedef_gap               = 3
align_typedef_span              = 3
align_right_cmt_span            = 3
align_nl_cont                   = true
align_pp_define_gap             = 3
align_pp_define_span            = 3

#
# Newline adding and removing options
#

nl_assign_leave_one_liners      = true
nl_class_leave_one_liners       = true
nl_start_of_file                = remove
nl_end_of_file                  = force
nl_end_of_file_min              = 1
nl_assign_brace                 = remove   # "= {" vs "= \n {"
nl_func_var_def_blk             = 1
nl_fcall_brace                  = force    # "list_for_each() {" vs "list_for_each() \n {"
nl_enum_brace                   = force    # "enum {" vs "enum \n {"
nl_struct_brace                 = force    # "struct {" vs "struct \n {"
nl_union_brace                  = force    # "union {" vs "union \n {"
nl_if_brace                     = force    # "if () {" vs "if () \n {"
nl_brace_else                   = force    # "} else" vs "} \n else"
nl_else_brace                   = force    # "else {" vs "else \n {"
nl_else_if                      = remove   # "else if {" vs "else \n if {"
nl_finally_brace                = force    # "finally {" vs "finally \n {"
nl_try_brace                    = force    # "try {" vs "try \n {"
nl_for_brace                    = force    # "for () {" vs "for () \n {"
nl_catch_brace                  = force    # "catch () {" vs "catch () \n {"
nl_while_brace                  = force    # "while () {" vs "while () \n {"
nl_do_brace                     = force    # "do {" vs "do \n {"
nl_brace_while                  = remove   # "} while" vs "} \n while"
nl_switch_brace                 = force    # "switch () {" vs "switch () \n {"
nl_multi_line_define            = true
nl_before_case                  = true
nl_func_type_name               = remove   # "int foo()" vs "int \n foo()"
nl_func_type_name_class         = remove
nl_func_paren                   = remove
nl_fdef_brace                   = force    # "int foo() {" vs "int foo()\n{"
nl_after_semicolon              = true
nl_after_brace_open             = true
nl_squeeze_ifdef                = true
nl_before_if                    = force
nl_before_for                   = force
nl_before_while                 = force
nl_before_switch                = force
nl_after_switch                 = force
nl_before_synchronized          = force
nl_before_do                    = force
nl_after_do                     = force

#
# Positioning options
#

pos_bool                        = trail

#
# Line Splitting options
#

#code_width                      = 80

#
# Blank line options
#

nl_max                          = 2
nl_before_func_body_def         = 2
nl_after_func_body              = 2
nl_before_block_comment         = 2
nl_before_c_comment             = 2
nl_before_cpp_comment           = 2
nl_comment_func_def             = 1
#nl_after_brace_close            = true
eat_blanks_after_open_brace     = true
eat_blanks_before_close_brace   = true
nl_before_return                = true
nl_after_return                 = true

#
# Code modifying options (non-whitespace)
#

mod_full_brace_do               = force    # "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_for              = force    # "for () a--;" vs "for () { a--; }"
mod_full_brace_if               = force    # "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_while            = force    # "while (a) a--;" vs "while (a) { a--; }"
mod_paren_on_return             = remove   # "return 1;" vs "return (1);"
mod_full_paren_if_bool          = true
mod_remove_extra_semicolon      = true
mod_case_brace                  = remove
mod_remove_empty_return         = true

#
# Comment modifications
#

cmt_star_cont                   = true

#
# Preprocessor options
#

pp_indent                       = remove
